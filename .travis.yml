dist: trusty
sudo: required

services:
  - docker

language: cpp

cache: ccache

matrix:
    include:
        - os: linux
          addons:
              apt:
                  sources: 
                      - ubuntu-toolchain-r-test
                      - sourceline: 'deb http://archive.ubuntu.com/ubuntu wily main'
                  packages: 
                      - g++-6
                      - lcov 
                      - cmake 
                      - libblas-dev 
                      - liblapack-dev 
                      - libboost-dev 
                      - python 
                      - libyaml-cpp0.5 
                      - libyaml-cpp-dev 
          env: 
              - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6 && cmake -DCMAKE_BUILD_TYPE:STRING=Debug -DBUILD_Trilinos:BOOL=ON -DCOVERAGE:BOOL=ON -D_GLIBCXX_USE_CXX11_ABI=0 .."
        - os: linux
          addons:
              apt:
                  sources: 
                     - llvm-toolchain-trusty
                     - sourceline: 'deb http://archive.ubuntu.com/ubuntu wily main'
                  packages: 
                      - clang-5.0
                      - cmake 
                      - libblas-dev 
                      - liblapack-dev 
                      - libboost-dev 
                      - python 
                      - libyaml-cpp0.5 
          env: 
              - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0 && cmake -DCMAKE_BUILD_TYPE:STRING=Debug -DBUILD_Trilinos:BOOL=ON .."
        - os: osx
          env: 
              - MATRIX_EVAL="CC=gcc && CXX=g++ && cmake -DCMAKE_BUILD_TYPE:STRING=Debug -DBUILD_Trilinos:BOOL=ON .."
        - os: osx
          env: 
              - MATRIX_EVAL="CC=clang && CXX=clang++ && cmake -DCMAKE_BUILD_TYPE:STRING=Debug -DBUILD_Trilinos:BOOL=ON .."

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   # via the "travis encrypt" command using the project repo's public key
     - secure: "dzxl+sy/vc2/hPAL9VfRlS3aa8CY5NZDLRfbx+9lLAYC8qmKWPtZwOyEa9RMx6Od1kHS6oNemNwFNCHiIPkH53031gqTXdMS/qHoZAjhRa1ejBE0L0HePdeJAamuJdFnW83PT+qcSWIwmedcaRYfhoYEn6H2TFF47uuhMGuhWz/SmC4Q9u+h8ocEW2uoCOMdLFLWtGyJDh0B3tvDrk+9pxVoJdBzwDAkHh6zoKBAgBQzCm171FC9XwdEvnmnmd/UudRnCDvKz7NZvCRW0FxE/yrli8UrhtAXJzGdYDkcyp5h4NIT4xkKvYgr/MJPsDluJCmOT63Mpcw5BbPhd0xrTMJx1RBIBPUodF/2tJMIp6INt3b51YRa8FniSjz8ih8woIfY+TtNIkKmsC4Aq3hQhM1HNL22B+YNl1VJ2m8EmllvvjMC0sYOYgzb5SA91qDJVm4qSwHI/QWJKscBdvBKv8PEaNLJyNuRc6URz4ukfjcXUJRepZZ5B6kTJAO/EIAGWuc1slzWJmSkc4EEU8QEyM9tUdxjRA+/73wVaJWzi2G92PfKBiz7+YRwLF1zX3hpQ9IrLltEuKQYXS5dHPuRrrL+deCAZTDiCaqnjbS/KPqDAR2yjhW5idLnuiTduLFaReUz0RmnL/03VFLdSbAziziGn0n1tcOEIHQBc1o9ocA="

before_install:
    - test -n $CC && unset CC
    - test -n $CXX && unset CXX
    - if [ "$TRAVIS_BRANCH" == "coverity_scan" ] ; then 
      if [ ${TRAVIS_JOB_NUMBER##*.} = 1 ] ; then
      echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca- ;
      git fetch https://github.com/johntfoster/TaDIgA.git master:master ;
      git rebase master ;
      else
      exit 0 ;
      fi
      fi
    - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo apt-get -qy install liboce-foundation-dev liboce-foundation8 liboce-modeling-dev liboce-modeling8 liboce-ocaf-dev liboce-ocaf8;
      elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew tap homebrew/science;
      brew install ccache lcov yaml-cpp homebrew/science/opencascade;
      brew upgrade boost python cmake git;
      PATH=$PATH:/usr/local/opt/ccache/libexec;
      fi

install:
    - if [ "$TRAVIS_BRANCH" != "coverity_scan" ]; then 
      mkdir build; 
      cd build; 
      eval "${MATRIX_EVAL}"
      make -j8;
      fi

script: if [ "$TRAVIS_BRANCH" != "coverity_scan" ]; then make test; fi

addons:
  coverity_scan:
    project:
      name: "johntfoster/TaDIgA"
      description: "Build submitted via Travis CI"
    notification_email: johntfosterjr@gmail.com
    build_command_prepend: "mkdir ../../build; cd ../../build; cmake -D CMAKE_BUILD_TYPE:STRING=Debug -D CMAKE_INSTALL_PREFIX:PATH=/usr/local/tadiga -DBUILD_Trilinos:BOOL=ON .."
    build_command: "make -j8"
    branch_pattern: coverity_scan

after_success:
  - if [ "$TRAVIS_BRANCH" != "coverity_scan" ]; then 
    if [ ${TRAVIS_JOB_NUMBER##*.} = 1 ] ; then
    gem install coveralls-lcov;
    make coverage;
    coveralls-lcov coverage.info.cleaned;
    cd .. ;
    docker build -t johntfoster/tadiga:latest . ;
    docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" ;
    docker push johntfoster/tadiga:latest ;
    fi;
    fi
